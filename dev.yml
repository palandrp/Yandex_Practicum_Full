version: '3.4'

services:

  redis:
    image: redis:6-alpine
    container_name: ypract_redis
    volumes:
        - ypract_redis_vol:/data
    ports: 
        - 6379:6379

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: ypract_elasticsearch
    environment:
        - discovery.type=single-node
    ports: 
        - 9200:9200

  movies-admin-postgres:
    image: postgres:13-alpine
    container_name: ypract_admin_postgres
    environment:
        - POSTGRES_HOST=movies-admin-postgres
        - POSTGRES_PORT=5432
        - POSTGRES_DB=movies
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=superPassword
    volumes:
        - ypract_admin_postgres_vol:/var/lib/postgresql/data
    ports:
        - 5432:5432

  movies-auth-postgres:
    image: postgres:13-alpine
    container_name: ypract_auth_postgres
    environment:
        - POSTGRES_HOST=movies-auth-postgres
        - POSTGRES_PORT=5432
        - POSTGRES_DB=auth
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=superPassword
    volumes:
        - ypract_auth_postgres_vol:/var/lib/postgresql/data
    ports:
        - 5433:5432

  movies-admin-nginx:
    image: nginx:latest
    container_name: ypract_admin_nginx
    volumes:
        - ./admin/admin_panel/compose/dev/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./admin/admin_panel/compose/dev/nginx/configs:/etc/nginx/conf.d:ro
        - ./admin/admin_panel/movies_admin/static:/data/static
    ports:
        - 80:80
    depends_on:
        - movies-admin-django
    links:
        - movies-admin-django:django
    restart: always


  movies-api-nginx:
    build: ./api/docker/nginx/
    container_name: ypract_api_nginx
    ports:
        - 88:80
    depends_on:
        - movies-api
    links:
        - movies-api:api
    restart: always

  movies-pg-es-etl:
    build:
        context: ./etl
        dockerfile: ./compose/etl/Dockerfile
    container_name: ypract_movies_pg_es_etl
    depends_on:
        - movies-admin-postgres
        - movies-admin-django
        - elasticsearch
    env_file:
        - ./etl/.envs/etl.env

  sqlite-pg-etl:
    build:
        context: ./admin/admin_panel
        dockerfile: compose/dev/etl/Dockerfile
    image: sqlite_pg_etl
    container_name: ypract_sqlite_pg_etl
    command: python load_data.py
    depends_on:
        - movies-admin-postgres
    env_file:
        - ./admin/admin_panel/.envs/dev/postgres.env
    volumes:
        - ./admin/admin_panel/sqlite_to_postgres:/app
    links:
        - movies-admin-postgres:postgres

  movies-admin-django:
    build:
        context: ./admin/admin_panel
        dockerfile: ./compose/dev/django/Dockerfile
    image: admin_django
    container_name: ypract_admin_django
    environment:
        - DJANGO_SUPERUSER_USERNAME=admin
        - DJANGO_SUPERUSER_PASSWORD=admin
        - DJANGO_SUPERUSER_EMAIL=admin@admin.ux
    command: >
        bash -c "
        python manage.py collectstatic --noinput && 
        python manage.py migrate &&
        python manage.py createsuperuser --noinput &&
        python manage.py generate_catalog --entity=persons --quantity=1000 &&
        python manage.py generate_catalog --entity=genres --quantity=100 &&
        python manage.py generate_catalog --entity=tvseries --quantity=10 &&
        python manage.py generate_catalog --entity=movies --quantity=1000 &&
        python manage.py runserver 0.0.0.0:8000"
    depends_on:
        - movies-admin-postgres
    env_file:
        - ./admin/admin_panel/.envs/dev/django.env
        - ./admin/admin_panel/.envs/dev/postgres.env
    volumes:
        - ./admin/admin_panel/movies_admin:/app
    ports:
        - 8000:8000
    links:
        - movies-admin-postgres:postgres

  movies-api:
    build:
        context: ./api
        dockerfile: ./docker/api/Dockerfile
    image: movies_api
    depends_on:
        - redis
        - elasticsearch
    ports:
        - "8080:8000"

  movies-auth:
    build:
        context: ./auth
        dockerfile: ./compose/dev/auth/Dockerfile
    image: movies_auth
    container_name: ypract_movies_auth
    command: python app.py
    depends_on:
        - movies-auth-postgres
        - redis
    volumes:
        - ./auth/auth:/app/auth
        - ./auth/app.py:/app/app.py:ro
        - ./auth/.envs/dev/auth.env:/app/.env:ro
    ports: 
        - "5000:5000"
    links:
        - movies-auth-postgres:postgres

volumes:
    ypract_redis_vol:
    ypract_auth_postgres_vol:
    ypract_admin_postgres_vol:
